{"version":3,"sources":["redux/constants/authActions.js","redux/reducers/authReducer.js","redux/constants/userActions.js","redux/reducers/userReducer.js","redux/constants/todoActions.js","redux/reducers/todosReducer.js","redux/constants/filterActions.js","redux/constants/filters.js","redux/reducers/filterReducer.js","redux/reducers/rootReducer.js","assets/logo.jpg","components/ui-component/AuthFormUI.js","components/containers/AuthForm.js","redux/actions/userActions.js","redux/actions/authActions.js","components/context/DashboardContext.js","components/ui-component/SideBarUI.js","components/ui-component/ToolbarUI.js","components/ui-component/EditTodoUI.js","components/ui-component/TodoUI.js","components/ui-component/TodosListUI.js","components/ui-component/DeleteModalUI.js","components/ui-component/DashboardUI.js","redux/actions/todoActions.js","components/containers/Dashboard.js","redux/actions/filterActions.js","components/ui-component/HomepageUI.js","App.js","index.js"],"names":["SIGNIN","SIGNOUT","authReducer","state","action","type","AuthActions","user","REGISTER_USER","userReducer","UserActions","id","uuidv4","ADD_TODO","UPDATE_TODO","TOGGLE_COMPLETE_TODO","TOGGLE_BOOKMARK_TODO","TOGGLE_DELETE_TODO","EMPTY_TODOS","initialState","todosReducer","TodoActions","todo","map","createdAt","Date","todoId","bookmarked","completed","deleted","filter","SET_FILTER","ACTIVE_TODOS","COMPLETED_TODOS","INCOMPLETE_TODOS","BOOKMARKED_TODOS","DELETED_TODOS","ALL_TODOS","Filters","filterReducer","FilterActions","rootReducer","combineReducers","authUser","users","todos","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Alert","props","elevation","variant","AuthFormUI","classes","isSignup","stateProperties","successMessage","setSuccessMessage","errorMessage","setErrorMessage","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","onSubmitHandler","Container","component","maxWidth","CssBaseline","className","Avatar","src","Logo","Typography","onClose","severity","noValidate","onSubmit","Grid","container","item","xs","sm","TextField","autoComplete","name","fullWidth","label","autoFocus","required","value","onChange","event","target","Button","color","justify","to","connect","dispatch","requestAddUser","addUser","requestSignin","signin","useState","redirect","setRedirect","validate","trim","test","String","toLowerCase","validateEmail","preventDefault","index","findIndex","DashboardContext","React","createContext","SideBarUI","useContext","drawerOpen","setDrawerOpen","selectedOperation","sidebarMenuChangeHandler","operations","operation","icon","FormatListBulleted","PlaylistAddCheck","LowPriority","Bookmark","Delete","ClearAll","Drawer","clsx","drawerPaper","drawerPaperClose","open","toolbarIcon","ListItem","ListItemIcon","ListItemText","primary","IconButton","onClick","Divider","List","button","drawerPaperActive","ToolbarUI","username","logout","AppBar","position","appBar","appBarShift","Toolbar","toolbar","edge","aria-label","menuButton","menuButtonHidden","noWrap","title","MAX_TITLE_LENGTH","header","justifyContent","error","fontSize","transparent","opacity","EditTodoUI","selectedTodo","saveTodoHandler","closeTodoModal","setTitle","summary","setSummary","length","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","multiline","rows","DialogActions","root","borderBottom","padding","cursor","metadata","overflow","marginRight","flexWrap","fontWeight","timestamp","textAlign","TodoUI","date","todoOnClickHandler","bookmarkTodoHandler","completeTodoHandler","deleteTodoHandler","bookmarkClass","stopPropagation","Refresh","Checkbox","checked","inputProps","toString","substring","useStyles1","flexShrink","marginLeft","TablePaginationActions","useTheme","count","page","rowsPerPage","onChangePage","disabled","direction","Math","ceil","max","useStyles2","empty","TodosListUI","isAppView","window","innerWidth","ui","push","setPage","setRowsPerPage","emptyRows","min","TableContainer","Paper","Table","table","TableHead","TableRow","TablePagination","rowsPerPageOptions","colSpan","SelectProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","TableBody","slice","row","style","height","TableCell","ModalUI","setShowDeleteModal","emptyTrashHandler","paddingRight","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","flexGrow","whiteSpace","overflowX","breakpoints","up","appBarSpacer","content","paddingTop","paddingBottom","fixedHeight","stickyFooter","bottom","right","emptyTrashButton","borderRadius","addTodoButton","marginBottom","DashboardUI","showTodoModal","setShowTodoModal","showDeleteModal","toUpperCase","Cancel","AddCircle","requestAddTodo","TodosActions","addTodo","requestUpdateTodo","updateTodo","requestCompleteTodo","completeTodo","requestBookmarkTodo","bookmarkTodo","requestDeleteTodo","deleteTodo","requestEmptyTodos","requestUpdateFilter","setFilter","requestSignOut","setSelectedOperation","setSelectedTodo","authUserId","todosList","author","sort","todo1","todo2","Provider","selectedItem","HomepageUI","store","createStore","PrivateRoute","Component","rest","render","getState","App","basename","exact","path","Dashboard","from","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a823de76.chunk.js","sourcesContent":["export const SIGNIN = 'SIGNIN';\nexport const SIGNOUT = 'SIGNOUT';\n","// maintains the authUser\nimport * as AuthActions from '../constants/authActions';\nconst initialState = null;\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case AuthActions.SIGNIN:\n            return action.user;\n        case AuthActions.SIGNOUT:\n            return null;\n        default:\n            return state;\n    }\n};\nexport default authReducer;","export const REGISTER_USER = 'REGISTER_USER';\n","// maintains the list of users\nimport * as UserActions from '../constants/userActions';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst userReducer = (state = [], action) => {\n    switch (action.type) {\n        case UserActions.REGISTER_USER:\n            return [\n                ...state,\n                { ...action.user, id: uuidv4() }\n            ];\n        default:\n            return state;\n    }\n};\nexport default userReducer;","export const ADD_TODO = 'EDIT_TODO';\nexport const UPDATE_TODO = 'UPDATE_TODO';\nexport const TOGGLE_COMPLETE_TODO = 'TOGGLE_COMPLETE_TODO';\nexport const TOGGLE_BOOKMARK_TODO = 'TOGGLE_BOOKMARK_TODO';\nexport const TOGGLE_DELETE_TODO = 'TOGGLE_DELETE_TODO';\nexport const EMPTY_TODOS = 'EMPTY_TODOS';\n","import * as TodoActions from '../constants/todoActions';\n// import todos from '../dummy_data/todos';\n\n// initially we start with an empty list of todos\nconst initialState = [];\n\n// now our state will be list of todos\nconst todosReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case TodoActions.ADD_TODO:\n            return [\n                ...state,\n                { ...action.todo }\n            ];\n\n        case TodoActions.UPDATE_TODO:\n            return state.map(todo => (\n                (todo.id === action.todo.id)\n                    ? { ...action.todo, createdAt: new Date()}\n                    : todo\n            ));\n\n        case TodoActions.TOGGLE_BOOKMARK_TODO:\n            return state.map(todo => (\n                (todo.id === action.todoId)\n                    ? { ...todo, bookmarked: !todo.bookmarked }\n                    : todo\n            ));\n\n        case TodoActions.TOGGLE_COMPLETE_TODO:\n            return state.map(todo => (\n                (todo.id === action.todoId)\n                    ? { ...todo, completed: !todo.completed }\n                    : todo\n            ));\n\n        case TodoActions.TOGGLE_DELETE_TODO:\n            return state.map(todo => (\n                (todo.id === action.todoId)\n                    ? { ...todo, deleted: !todo.deleted }\n                    : todo\n            ));\n\n        case TodoActions.EMPTY_TODOS:\n            return state.filter(todo => !todo.deleted);\n\n        default:\n            return state;\n    }\n};\n\nexport default todosReducer;\n","export const SET_FILTER = 'SET_FILTER';\n","export const ACTIVE_TODOS = 'Active Todos';\nexport const COMPLETED_TODOS = 'Completed Todos';\nexport const INCOMPLETE_TODOS = 'Incomplete Todos';\nexport const BOOKMARKED_TODOS = 'Bookmarked Todos';\nexport const DELETED_TODOS = 'Deleted Todos';\nexport const ALL_TODOS = 'All Todos';\n","import * as FilterActions from '../constants/filterActions';\nimport * as Filters from '../constants/filters';\n\n// initially we start with empty list of filteredTodos\nconst initialState = Filters.ACTIVE_TODOS;\nconst filterReducer = (state = initialState, action) => {    \n    switch(action.type) {\n        case FilterActions.SET_FILTER: \n            return action.filter;\n        default: \n            return state;\n    }\n};\nexport default filterReducer;","import {combineReducers} from 'redux';\nimport authReducer from './authReducer';\nimport userReducer from './userReducer';\nimport todosReducer from './todosReducer';\nimport filterReducer from './filterReducer';\n\nconst rootReducer = combineReducers({\n    authUser: authReducer,\n    users: userReducer,\n    todos: todosReducer,\n    filter: filterReducer\n});\nexport default rootReducer;","export default __webpack_public_path__ + \"static/media/logo.232e8696.jpg\";","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Logo from '../../assets/logo.jpg';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function AuthFormUI(props) {\n  const classes = useStyles();\n  const { isSignup, stateProperties } = props;\n  const {\n    successMessage, setSuccessMessage,\n    errorMessage, setErrorMessage,\n    firstName, setFirstName,\n    lastName, setLastName,\n    email, setEmail,\n    password, setPassword,\n    onSubmitHandler\n  } = stateProperties;\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar} src={Logo} />\n        <Typography component=\"h1\" variant=\"h5\">\n          TodoApp - {isSignup ? \"Sign Up\" : \"Sign In\"}\n        </Typography>\n        {successMessage && (\n          <Alert onClose={() => setSuccessMessage(\"\")} severity=\"success\">\n            {successMessage}\n          </Alert>\n        )}\n        {errorMessage && (\n          <Alert onClose={() => setErrorMessage(\"\")} severity=\"error\">\n            {errorMessage}\n          </Alert>\n        )}\n        <form className={classes.form} noValidate onSubmit={onSubmitHandler}>\n          <Grid container spacing={2}>\n            {isSignup && (\n              <>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    autoComplete=\"fname\"\n                    name=\"firstName\"\n                    variant=\"outlined\"\n                    fullWidth\n                    id=\"firstName\"\n                    label=\"First Name\"\n\t\t\t\t\tautoFocus\n                    required\n                    value={firstName}\n                    onChange={(event) => setFirstName(event.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"lastName\"\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    autoComplete=\"lname\"\n                    value={lastName}\n                    onChange={(event) => setLastName(event.target.value)}\n                  />\n                </Grid>\n              </>\n            )}\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n\t\t\t\tautoFocus={!isSignup}\n                value={email}\n                onChange={(event) => setEmail(event.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={password}\n                onChange={(event) => setPassword(event.target.value)}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            {isSignup ? \"Sign Up\" : \"Sign In\"}\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              {isSignup && (\n                <Link to=\"/signin\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              )}\n              {!isSignup && (\n                <Link to=\"/signup\" variant=\"body2\">\n                  Don't have an account? Sign up\n                </Link>\n              )}\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addUser } from '../../redux/actions/userActions';\nimport { signin } from '../../redux/actions/authActions';\nimport {Redirect} from 'react-router-dom';\nimport AuthFormUI from '../ui-component/AuthFormUI';\n\nconst AuthForm = (props) => {\n\n\tconst {\n\t\tisSignup,\n\t\trequestAddUser,\n\t\trequestSignin,\n\t} = props;\n\n\tconst [successMessage, setSuccessMessage] = useState(\"\");\n\tconst [errorMessage, setErrorMessage] = useState(\"\");\n\tconst [firstName, setFirstName] = useState(\"\");\n\tconst [lastName, setLastName] = useState(\"\");\n\tconst [email, setEmail] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [redirect, setRedirect] = useState(props.authUser !== null)\n\n\tfunction validateEmail(email) {\n\t\tconst re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\t\treturn re.test(String(email).toLowerCase());\n\t}\n\tconst validate = () => {\n\t\tif (isSignup) {\n\t\t\tif (firstName.trim() === \"\") {\n\t\t\t\tsetErrorMessage(\"Please provide your firstName!\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (lastName.trim() === \"\") {\n\t\t\t\tsetErrorMessage(\"Please provide your lastName!\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (!validateEmail(email)) {\n\t\t\tsetErrorMessage(\"Please provide a valid email address!\");\n\t\t\treturn false;\n\t\t}\n\t\tif (password.trim() === \"\") {\n\t\t\tsetErrorMessage(\"Please provide a valid password!\");\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t};\n\tconst onSubmitHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tsetErrorMessage(\"\");\n\t\tsetSuccessMessage(\"\");\n\t\tif (!validate()) return;\n\t\tlet index = props.users.findIndex(user => user.email === email);\n\t\tif (isSignup) {\n\t\t\tif (index !== -1) {\n\t\t\t\tsetErrorMessage(`That email has already been taken!`);\n\t\t\t} else {\n\t\t\t\tlet user = {\n\t\t\t\t\tfirstName, lastName,\n\t\t\t\t\temail, password\n\t\t\t\t};\n\t\t\t\trequestAddUser(user);\n\t\t\t\tsetSuccessMessage(`You were successfully registered!`);\n\n\t\t\t}\n\t\t} else {\n\t\t\tif (index === -1) {\n\t\t\t\tsetErrorMessage(`That email is not registered!`);\n\t\t\t} else if (props.users[index].password !== password){\n\t\t\t\tsetErrorMessage(`The password you just provided didn't work!`);\n\t\t\t} else {\n\t\t\t\trequestSignin(props.users[index]);\n\t\t\t\tsetRedirect(true);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (redirect)\treturn <Redirect to=\"/dashboard\" />\n\treturn (\n\t\t<AuthFormUI\n\t\t\t{...props}\n\t\t\tstateProperties={{\n\t\t\t\tsuccessMessage, setSuccessMessage,\n\t\t\t\terrorMessage, setErrorMessage,\n\t\t\t\tfirstName, setFirstName,\n\t\t\t\tlastName, setLastName,\n\t\t\t\temail, setEmail,\n\t\t\t\tpassword, setPassword,\n\t\t\t\tonSubmitHandler\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nconst mapStateToProps = (state) => ({\n\tusers: state.users,\n\tauthUser: state.authUser\n});\nconst mapDispatchToProps = (dispatch) => ({\n\trequestAddUser: (user) => dispatch(addUser(user)),\n\trequestSignin: (user) => dispatch(signin(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm);","// action creators for user-management\nimport * as UserActions from '../constants/userActions';\nimport { v4 as uuidv4 } from 'uuid';\nexport const addUser = (user) => ({\n    type: UserActions.REGISTER_USER,\n    user: {...user, id: uuidv4()}\n});","import * as AuthActions from '../constants/authActions';\nexport const signin = (user) => ({\n    type: AuthActions.SIGNIN,\n    user\n});\nexport const signout = () => ({\n    type: AuthActions.SIGNOUT\n})","import React from 'react';\nconst DashboardContext = React.createContext({ });\nexport default DashboardContext;","import React, { useContext } from \"react\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport clsx from \"clsx\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Logo from \"../../assets/logo.jpg\";\nimport {\n  FormatListBulleted, PlaylistAddCheck,\n  LowPriority, Delete, Bookmark,\n  ClearAll\n} from '@material-ui/icons';\nimport * as Filters from '../../redux/constants/filters';\nimport DashboardContext from '../context/DashboardContext';\n\nexport default function SideBarUI(props) {\n  const { classes } = props;\n  const {\n    drawerOpen, setDrawerOpen,\n    selectedOperation, sidebarMenuChangeHandler,\n  } = useContext(DashboardContext);\n\n  let operations = [\n    { operation: Filters.ACTIVE_TODOS, icon: <FormatListBulleted /> },\n    { operation: Filters.COMPLETED_TODOS, icon: <PlaylistAddCheck /> },\n    { operation: Filters.INCOMPLETE_TODOS, icon: <LowPriority /> },\n    { operation: Filters.BOOKMARKED_TODOS, icon: <Bookmark /> },\n    { operation: Filters.DELETED_TODOS, icon: <Delete /> },\n    { operation: Filters.ALL_TODOS, icon: <ClearAll /> },\n  ]\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      classes={{\n        paper: clsx(classes.drawerPaper, !drawerOpen && classes.drawerPaperClose),\n      }}\n      open={drawerOpen}\n    >\n      <div className={classes.toolbarIcon}>\n        <ListItem>\n          <ListItemIcon>\n            <Avatar src={Logo} />\n          </ListItemIcon>\n          <ListItemText primary=\"TodoApp\" />\n        </ListItem>\n        <IconButton onClick={() => setDrawerOpen(false)}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        {operations.map(item => (\n          <ListItem key={item.operation} button\n            onClick={() => sidebarMenuChangeHandler(item.operation)}\n            className={selectedOperation === item.operation && classes.drawerPaperActive}>\n            <ListItemIcon>\n              {item.icon}\n            </ListItemIcon>\n            <ListItemText primary={item.operation} />\n          </ListItem>\n        ))}\n      </List>\n    </Drawer>\n  );\n}\n","import React, {useContext} from 'react';\nimport clsx from \"clsx\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ExitToApp from '@material-ui/icons/ExitToApp';\nimport DashboardContext from '../context/DashboardContext';\n\n\nexport default function ToolbarUI(props){\n    const {classes} = props;\n    const {\n      drawerOpen, setDrawerOpen,\n      username, logout,\n    } = useContext(DashboardContext);\n    return (\n        <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, drawerOpen && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={() => setDrawerOpen(true)}\n            className={clsx(\n              classes.menuButton,\n              drawerOpen && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            {username}\n          </Typography>\n          <IconButton color=\"inherit\"\n            onClick={() => logout()}>\n            <ExitToApp />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    );\n}","import React, { useContext, useState } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DashboardContext from '../context/DashboardContext';\n\nconst MAX_TITLE_LENGTH = 100;\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  header: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  error: {\n    color: \"red\",\n    fontSize: \"10px\"\n  },\n  transparent: {\n    fontSize: \"10px\",\n    opacity: 0\n  }\n}));\n\nexport default function EditTodoUI(props) {\n  const classes = useStyles();\n  const {\n    selectedTodo, saveTodoHandler, closeTodoModal\n  } = useContext(DashboardContext);\n  const [title, setTitle] = useState(selectedTodo ? selectedTodo.title : 'title');\n  const [summary, setSummary] = useState(selectedTodo ? selectedTodo.summary : 'summary');\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    let length = title.trim().length;\n    if (length > MAX_TITLE_LENGTH) return;\n    if (length === 0) return;\n    closeTodoModal();\n    saveTodoHandler(selectedTodo, title, summary);\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={true}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          <div className={classes.header}>\n            <span>{selectedTodo ? \"Edit Todo\" : \"Add Todo\"}</span>\n            <IconButton onClick={closeTodoModal}>\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <form className={classes.form} onSubmit={onSubmitHandler}\n              noValidate autoComplete=\"off\">\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField fullWidth label=\"Title\" variant=\"outlined\"\n                    error={title.length > MAX_TITLE_LENGTH}\n                    autoFocus \n                    value={title}\n                    required\n                    onChange={(event) => setTitle(event.target.value)} />\n                    <span className={title.length > MAX_TITLE_LENGTH ? classes.error : classes.transparent}>\n                      Max {MAX_TITLE_LENGTH} characters are allowed</span>\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField id=\"summary\" multiline fullWidth rows=\"5\"\n                    label=\"Summary\" variant=\"outlined\"\n                    value={summary}\n                    onChange={(event) => setSummary(event.target.value)} />\n                </Grid>\n              </Grid>\n\n            </form>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeTodoModal} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button onClick={onSubmitHandler} color=\"primary\" autoFocus>\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Delete, Bookmark, Refresh } from '@material-ui/icons';\nimport DashboardContext from '../context/DashboardContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n    borderBottom: \"1px solid #ededed\",\n    padding: \"5px\",\n    cursor: \"pointer\",\n  },\n  header: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  metadata: {\n    overflow: \"hidden\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginRight: \"20px\",\n    flexWrap: \"wrap\"\n  },\n  button: {\n    padding: \"5px\",\n    margin: \"0px\"\n  },\n  bookmarked: {\n    padding: \"5px\",\n    margin: \"0px\",\n    color: 'gold',\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontSize: \"18px\",\n  },\n  timestamp: {\n    textAlign: \"right\"\n  },\n  summary: {\n\n  }\n}));\n\nfunction formatDate(date) {\n  return date.toString().substring(0, 25);\n}\nexport default function TodoUI(props) {\n  const classes = useStyles();\n  const { todo } = props;\n  const {\n    todoOnClickHandler,\n    bookmarkTodoHandler,\n    completeTodoHandler,\n    deleteTodoHandler\n  } = useContext(DashboardContext);\n\n  let bookmarkClass = todo.bookmarked ? classes.bookmarked : classes.button;\n  return (\n    <div className={classes.root} onClick={() => todoOnClickHandler(todo)}>\n      <div className={classes.metadata}>\n        <IconButton className={classes.button}\n          onClick={event => {\n            event.stopPropagation();\n            deleteTodoHandler(todo.id);\n          }}>\n            {todo.deleted ? <Refresh /> : <Delete />}\n          {/* <Delete /> */}\n        </IconButton>\n        <IconButton className={bookmarkClass}\n          onClick={event => {\n            event.stopPropagation();\n            bookmarkTodoHandler(todo.id);\n          }}>\n          <Bookmark />\n        </IconButton>\n        <Checkbox\n          checked={todo.completed}\n          onClick={event => event.stopPropagation()}\n          onChange={event => {\n            event.stopPropagation();\n            completeTodoHandler(todo.id);\n          }}\n          color=\"primary\"\n          inputProps={{ 'aria-label': 'secondary checkbox' }}\n        />\n        <span className={classes.title}>{todo.title}</span>\n      </div>\n      <p>{todo.summary}</p>\n      <div className={classes.timestamp}>{formatDate(todo.createdAt)}</div>\n    </div>\n  )\n};","import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TodoUI from './TodoUI';\nimport DashboardContext from '../context/DashboardContext';\n\nconst useStyles1 = makeStyles((theme) => ({\n    root: {\n        flexShrink: 0,\n        marginLeft: theme.spacing(2.5),\n    },\n}));\n\nfunction TablePaginationActions(props) {\n    const classes = useStyles1();\n    const theme = useTheme();\n    const { count, page, rowsPerPage, onChangePage } = props;\n\n    const handleFirstPageButtonClick = (event) => {\n        onChangePage(event, 0);\n    };\n\n    const handleBackButtonClick = (event) => {\n        onChangePage(event, page - 1);\n    };\n\n    const handleNextButtonClick = (event) => {\n        onChangePage(event, page + 1);\n    };\n\n    const handleLastPageButtonClick = (event) => {\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n    };\n\n    return (\n        <div className={classes.root}>\n            <IconButton\n                onClick={handleFirstPageButtonClick}\n                disabled={page === 0}\n                aria-label=\"first page\"\n            >\n                {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n            </IconButton>\n            <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n            </IconButton>\n            <IconButton\n                onClick={handleNextButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"next page\"\n            >\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n            </IconButton>\n            <IconButton\n                onClick={handleLastPageButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"last page\"\n            >\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n            </IconButton>\n        </div>\n    );\n}\n\nTablePaginationActions.propTypes = {\n    count: PropTypes.number.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n};\nconst useStyles2 = makeStyles({\n    empty: {\n        textAlign: \"center\"\n    }\n});\nexport default function TodosListUI() {\n    const {todos} = useContext(DashboardContext);\n    const classes = useStyles2();\n    const isAppView = (window.innerWidth < 650);\n    const rows = todos.map(todo => ({ id: todo.id, createdAt: todo.createdAt, ui: <TodoUI todo={todo} /> }));\n    if (rows.length === 0)  rows.push({id: 0, ui: <h3 className={classes.empty}>You don't have any todos here!</h3>});\n\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(isAppView ? rows.length : 5);\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n    const handleChangePage = (event, newPage) => setPage(newPage);\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    return (\n        <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"custom pagination table\">\n                {!isAppView && \n                <TableHead>\n                    <TableRow>\n                        <TablePagination\n                            rowsPerPageOptions={[5, 10, 25, 50, 100, 200, { label: 'All', value: -1 }]}\n                            colSpan={3}\n                            count={rows.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            SelectProps={{\n                                inputProps: { 'aria-label': 'rows per page' },\n                                native: true,\n                            }}\n                            onChangePage={handleChangePage}\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\n                            ActionsComponent={TablePaginationActions}\n                        />\n                    </TableRow>\n                </TableHead>}\n                <TableBody>\n                    {(rowsPerPage > 0\n                        ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        : rows\n                    ).map((row) => (\n                        <TableRow key={row.id}>\n                            {row.ui}\n                        </TableRow>\n                    ))}\n\n                    {emptyRows > 0 && (\n                        <TableRow style={{ height: 53 * emptyRows }}>\n                            <TableCell colSpan={6} />\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n","import React, {useContext} from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DashboardContext from '../context/DashboardContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    header: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\"\n    },\n    error: {\n        color: \"red\",\n        fontSize: \"10px\"\n    },\n    transparent: {\n        fontSize: \"10px\",\n        opacity: 0\n    }\n}));\n\nexport default function ModalUI(props) {\n    const classes = useStyles();\n    const {\n        setShowDeleteModal,\n        emptyTrashHandler\n    } = useContext(DashboardContext);\n    const onSubmitHandler = () => {\n        setShowDeleteModal(false);\n        emptyTrashHandler();\n    }\n    return (\n        <div>\n            <Dialog\n                open={true}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    <div className={classes.header}>\n                        <span>Empty Trash</span>\n                        <IconButton onClick={() => setShowDeleteModal(false)}>\n                            <CloseIcon />\n                        </IconButton>\n                    </div>\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <p>\n                            Are you sure you want to empty your trash? <br/>\n                            This is a potentially destructive operation and changes cannot be undone.\n                        </p>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setShowDeleteModal(false)} \n                        color=\"secondary\" autoFocus>\n                        Cancel\n                    </Button>\n                    <Button onClick={onSubmitHandler} color=\"primary\">\n                        Empty\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React, { useContext } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { AddCircle, Cancel } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SideBarUI from './SideBarUI';\nimport ToolbarUI from './ToolbarUI';\nimport EditTodoUI from './EditTodoUI';\nimport TodosListUI from './TodosListUI';\nimport DeleteModalUI from './DeleteModalUI';\nimport DashboardContext from '../context/DashboardContext';\nimport * as Filters from '../../redux/constants/filters';\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    overflowX: \"hidden\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  drawerPaperActive: {\n    backgroundColor: \"#cff4fc\"\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  stickyFooter: {\n    position: \"fixed\",\n    bottom: \"10px\",\n    right: \"20px\",\n  },\n  emptyTrashButton: {\n    backgroundColor: \"white\",\n    color: \"rgb(220, 0, 78)\",\n    borderRadius: \"50%\"\n  },\n  addTodoButton: {\n    backgroundColor: \"white\",\n    color: \"#3f51b5\",\n    borderRadius: \"50%\"\n  },\n  header: {\n    borderBottom: \"1px solid #ededed\",\n    marginBottom: \"20px\"\n  }\n}));\n\n\n\n\n\n\n\nexport default function DashboardUI(props) {\n  const classes = useStyles();\n  const {\n    showTodoModal, setShowTodoModal,\n    showDeleteModal, setShowDeleteModal,\n    selectedOperation\n  } = useContext(DashboardContext);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <ToolbarUI classes={classes} />\n      <SideBarUI classes={classes} />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Typography className={classes.header} component=\"h1\" variant=\"h5\">\n            {String(selectedOperation).toUpperCase()}\n          </Typography>\n          <TodosListUI />\n        </Container>\n      </main>\n      {showTodoModal && <EditTodoUI />}\n      {showDeleteModal && <DeleteModalUI />}\n      <span className={classes.stickyFooter}>\n        {selectedOperation === Filters.DELETED_TODOS &&\n        <Button className={classes.emptyTrashButton} \n          onClick={() => setShowDeleteModal(true)}>\n          <Cancel className=\"addTodoButton\" />\n        </Button>}\n        <Button  className={classes.addTodoButton}\n          onClick={() => setShowTodoModal(true)}>\n          <AddCircle className=\"addTodoButton\" />\n        </Button>\n      </span>\n    </div>\n  );\n}\n","// action creaters for todo-management\nimport * as TodosActions from '../constants/todoActions';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const addTodo = (todo) => ({\n    type: TodosActions.ADD_TODO,\n    todo: {...todo, id: uuidv4()}\n});\n\nexport const updateTodo = (todo) => ({\n    type: TodosActions.UPDATE_TODO,\n    todo\n});\n\nexport const bookmarkTodo = (todoId) => ({\n    type: TodosActions.TOGGLE_BOOKMARK_TODO,\n    todoId\n});\n\nexport const deleteTodo = (todoId) => ({\n    type: TodosActions.TOGGLE_DELETE_TODO,\n    todoId\n});\n\nexport const completeTodo = (todoId) => ({\n    type: TodosActions.TOGGLE_COMPLETE_TODO,\n    todoId\n});\n\nexport const emptyTodos = () => ({\n    type: TodosActions.EMPTY_TODOS\n});","import React, { useState } from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport DashboardUI from '../ui-component/DashboardUI';\nimport DashboardContext from '../context/DashboardContext';\nimport {\n\taddTodo, updateTodo,\n\tcompleteTodo, deleteTodo, \n\tbookmarkTodo, emptyTodos\n} from '../../redux/actions/todoActions';\nimport {signout} from '../../redux/actions/authActions';\nimport { setFilter } from '../../redux/actions/filterActions';\nimport * as Filters from '../../redux/constants/filters';\n\n\n\n// filters the todos based on passed list!\nconst getFilteredTodos = (authUserId, todosList, filter) => {\n\treturn todosList.filter(todo => {\n\t\tif (todo.author !== authUserId)\treturn false;\n\t\tswitch(filter){\n\t\t\tcase Filters.ALL_TODOS: \t\treturn true;\n\t\t\tcase Filters.ACTIVE_TODOS: \t\treturn !todo.deleted && !todo.completed;\n\t\t\tcase Filters.COMPLETED_TODOS: \treturn !todo.deleted && todo.completed;\n\t\t\tcase Filters.INCOMPLETE_TODOS: \treturn !todo.deleted && !todo.completed;\n\t\t\tcase Filters.BOOKMARKED_TODOS: \treturn !todo.deleted && todo.bookmarked;\n\t\t\tcase Filters.DELETED_TODOS: \treturn todo.deleted;\n\t\t\tdefault: \t\t\t\t\t\treturn false;\n\t\t}\n\t}).sort((todo1, todo2) => new Date(todo2.createdAt) - new Date(todo1.createdAt));\n};\n\nconst Dashboard = (props) => {\n\t// destructure the properties added by \n\t// mapDispatchToProps\n\tconst {\n\t\trequestAddTodo, requestUpdateTodo,\n\t\trequestCompleteTodo, requestBookmarkTodo, \n\t\trequestDeleteTodo, requestEmptyTodos,\n\t\trequestUpdateFilter,\n\t\trequestSignOut,\n\t} = props;\n\tconst {authUser} = props;\n\n\t// local state management for UI\n\tconst [selectedOperation, setSelectedOperation] = useState(props.filter);\n\tconst [drawerOpen, setDrawerOpen] = useState(window.innerWidth > 500);\n\tconst [showTodoModal, setShowTodoModal] = useState(false);\n\tconst [selectedTodo, setSelectedTodo] = useState(null);\n\tconst [showDeleteModal, setShowDeleteModal] = useState(false);\n\tconst closeTodoModal = () => {\n\t\tsetShowTodoModal(false);\n\t\tsetSelectedTodo(null);\n\t};\n\tconst todoOnClickHandler = (todo) => {\n\t\tsetSelectedTodo(todo);\n\t\tsetShowTodoModal(true);\n\t};\n\tconst logout = () => requestSignOut();\n\n\t// maps the handler to redux-reducers\n\tconst saveTodoHandler = (todo, title, summary) => {\n\t\tsetShowTodoModal(false);\n\t\tif (todo)\trequestUpdateTodo({...todo, title, summary});\n\t\telse\t\trequestAddTodo({\n\t\t\tauthor: authUser.id,\n\t\t\tcompleted: false,\n\t\t\tbookmarked: false,\n\t\t\tdeleted: false,\n\t\t\ttitle, summary,\n\t\t\tcreatedAt: new Date()\n\t\t});\n\t}\n\tconst completeTodoHandler = (todoId) => requestCompleteTodo(todoId);\n\tconst bookmarkTodoHandler = (todoId) => requestBookmarkTodo(todoId);\n\tconst deleteTodoHandler = (todoId) => requestDeleteTodo(todoId);\n\tconst emptyTrashHandler = () => requestEmptyTodos();\n\tconst sidebarMenuChangeHandler = (selectedItem) => {\n\t\tsetSelectedOperation(selectedItem);\n\t\trequestUpdateFilter(selectedItem);\n\t}\n\n\n\tif (authUser === null)\treturn <Redirect to=\"/signin\" />;\n\tconst username = (authUser.firstName + \" \" + authUser.lastName);\n\tconst todos = getFilteredTodos(authUser.id, props.todos, selectedOperation);\n\treturn (\n\t\t<DashboardContext.Provider value={{\n\n\t\t\t// context for SideBarUI\n\t\t\tdrawerOpen, setDrawerOpen,\n\t\t\tselectedOperation, sidebarMenuChangeHandler,\n\n\t\t\t// context for ToolbarUI\n\t\t\tusername, logout,\n\n\t\t\t// context for EditTodoUI\n\t\t\tshowTodoModal, selectedTodo,\n\t\t\tsaveTodoHandler, closeTodoModal,\n\n\t\t\t// context for TodoUI\n\t\t\tcompleteTodoHandler, bookmarkTodoHandler,\n\t\t\tdeleteTodoHandler, todoOnClickHandler,\n\n\t\t\t// context for DashboardUI\n\t\t\tsetShowTodoModal, showDeleteModal, setShowDeleteModal,\n\n\t\t\t// context for DeleteModalUI\n\t\t\temptyTrashHandler,\n\n\t\t\t// for todosListUI\n\t\t\ttodos,\n\n\t\t}}>\n\t\t\t<DashboardUI />\n\t\t</DashboardContext.Provider>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn ({ \n\t\tauthUser: state.authUser,\n\t\ttodos: state.todos,\n\t\tfilter: state.filter\n\t});\n}\nconst mapDispatchToProps = (dispatch) => {\n\treturn ({\n\t\trequestAddTodo: (todo) => dispatch(addTodo(todo)),\n\t\trequestUpdateTodo: (todo) => dispatch(updateTodo(todo)),\n\t\trequestCompleteTodo: (todoId) => dispatch(completeTodo(todoId)),\n\t\trequestBookmarkTodo: (todoId) => dispatch(bookmarkTodo(todoId)),\n\t\trequestDeleteTodo: (todoId) => dispatch(deleteTodo(todoId)),\n\t\trequestEmptyTodos: () => dispatch(emptyTodos()),\n\t\trequestUpdateFilter: (filter) => dispatch(setFilter(filter)),\n\t\trequestSignOut: () => dispatch(signout()),\n\t});\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","// action-creaters for filtering-todos!\nimport * as FilterActions from '../constants/filterActions';\n\nexport const setFilter = (filter) => ({\n    type: FilterActions.SET_FILTER,\n    filter\n});\n","import React, {useState} from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from '@material-ui/core/Button';\nimport Logo from '../../assets/logo.jpg';\nimport {Redirect} from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    button: {\n        margin: \"0px 10px\"\n    }\n}));\n\nexport default function HomepageUI(props) {\n    const classes = useStyles();\n    const [redirect, setRedirect] = useState(null);\n    if (redirect)   return redirect;\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar} src={Logo} />\n                <Typography component=\"h1\" variant=\"h5\">\n                    TodoApp\n                </Typography>\n                <div>\n                    <p>\n                        A simple todo-management system written for tutorial/blog purposes!\n                        The following are the major concepts covered: <br />\n                    </p>\n                    <ul>\n                        <li>ReactJs functional components and hooks</li>\n                        <li>Routing in ReactJs</li>\n                        <li>Private & Public routes</li>\n                        <li>Use of Context API</li>\n                        <li>Use of Redux</li>\n                        <li>Deployment to GitHub Pages</li>\n                    </ul>\n                    <p><strong>For demonstration purposes no database is used and your data is lost if you reload the page!</strong></p>\n                    <div>\n                        <Button variant=\"contained\"\n                            color=\"primary\" className={classes.button}\n                            onClick={() => setRedirect(<Redirect to=\"/signin\" />)}>\n                            SignIn\n                        </Button>\n                        <Button variant=\"contained\"\n                            color=\"primary\" className={classes.button}\n                            onClick={() => setRedirect(<Redirect to=\"/signup\" />)}>\n                            SignUp\n                        </Button>\n                    </div>\n                </div>\n\n            </div>\n        </Container>\n    );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './redux/reducers/rootReducer';\nimport AuthForm from './components/containers/AuthForm';\nimport Dashboard from \"./components/containers/Dashboard\";\nimport HomepageUI from './components/ui-component/HomepageUI';\n\nconst store = createStore(rootReducer);\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    return (\n        <Route {...rest} render={props => (\n            store.getState().authUser ?\n                <Component {...props} />\n            : <Redirect to=\"/signin\" />\n        )} />\n    );\n};\n\nfunction App() {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Router basename=\"/todo-management-react-redux\">\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\" render={() => <HomepageUI />} />\n\t\t\t\t\t\t<Route exact path=\"/signin\" render={() => <AuthForm isSignup={false} />} />\n\t\t\t\t\t\t<Route exact path=\"/signup\" render={() => <AuthForm isSignup={true} />} />\n\t\t\t\t\t\t<PrivateRoute exact path=\"/dashboard\" component={Dashboard}/>\n\t\t\t\t\t\t<Redirect from=\"/\" to=\"/\" />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t</Provider>\n\t);\n\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}